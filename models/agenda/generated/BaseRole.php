<?php

/**
 * BaseRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $role
 * @property string $description
 * @property integer $active
 * @property timestamp $date_insert
 * @property Doctrine_Collection $RoleController
 * @property Doctrine_Collection $RoleControllerAction
 * @property Doctrine_Collection $RoleModule
 * @property Doctrine_Collection $UserRole
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseRole extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('role');
        $this->hasColumn('role', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => false,
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('description', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('active', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('date_insert', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        $this->hasMany('RoleController', array(
             'local' => 'role',
             'foreign' => 'role'));

        $this->hasMany('RoleControllerAction', array(
             'local' => 'role',
             'foreign' => 'role'));

        $this->hasMany('RoleModule', array(
             'local' => 'role',
             'foreign' => 'role'));

        $this->hasMany('UserRole', array(
             'local' => 'role',
             'foreign' => 'role'));
    }
}