<?php

/**
 * BaseMdlGradeItemsHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $action
 * @property integer $oldid
 * @property string $source
 * @property integer $timemodified
 * @property integer $loggeduser
 * @property integer $courseid
 * @property integer $categoryid
 * @property string $itemname
 * @property string $itemtype
 * @property string $itemmodule
 * @property integer $iteminstance
 * @property integer $itemnumber
 * @property string $iteminfo
 * @property string $idnumber
 * @property string $calculation
 * @property integer $gradetype
 * @property decimal $grademax
 * @property decimal $grademin
 * @property integer $scaleid
 * @property integer $outcomeid
 * @property decimal $gradepass
 * @property decimal $multfactor
 * @property decimal $plusfactor
 * @property decimal $aggregationcoef
 * @property integer $sortorder
 * @property integer $hidden
 * @property integer $locked
 * @property integer $locktime
 * @property integer $needsupdate
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseMdlGradeItemsHistory extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('mdl_grade_items_history');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('action', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('oldid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('timemodified', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('loggeduser', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('courseid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('categoryid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('itemname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('itemtype', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('itemmodule', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('iteminstance', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('itemnumber', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('iteminfo', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('idnumber', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('calculation', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('gradetype', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             'unsigned' => 0,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('grademax', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'unsigned' => 0,
             'primary' => false,
             'default' => '100.00000',
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             ));
        $this->hasColumn('grademin', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.00000',
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             ));
        $this->hasColumn('scaleid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('outcomeid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('gradepass', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.00000',
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             ));
        $this->hasColumn('multfactor', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'unsigned' => 0,
             'primary' => false,
             'default' => '1.00000',
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             ));
        $this->hasColumn('plusfactor', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.00000',
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             ));
        $this->hasColumn('aggregationcoef', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.00000',
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             ));
        $this->hasColumn('sortorder', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('hidden', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('locked', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('locktime', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 1,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('needsupdate', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

}