<?php

/**
 * BasePytmExperimento
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_experimento
 * @property string $de_componente
 * @property timestamp $fe_ini_experimento
 * @property timestamp $fe_fin_experimento
 * @property string $de_localidad_experimento
 * @property string $de_palabras_claves
 * @property string $de_resumen
 * @property string $de_introduccion
 * @property string $de_metodo_usuado
 * @property string $de_resultado
 * @property string $de_conclusiones
 * @property string $ap_paterno_propietario
 * @property string $de_meta_lograda
 * @property string $ap_materno_propietario
 * @property string $de_nomnre__propietario
 * @property string $de_meta_programada
 * @property decimal $ca_muestra_experimento
 * @property string $de_aspecto_especificio
 * @property string $de_problema_especifico
 * @property string $de_objetivo
 * @property decimal $ca_total_repeticiones
 * @property string $de_diseno_experimental
 * @property float $ca_presupuesto_bienes
 * @property float $ca_presupuesto_servicio
 * @property float $ca_presupuesto_otros
 * @property float $ca_presupuesto__total_exp
 * @property decimal $pc_subproyecto
 * @property timestamp $fe_creacion
 * @property string $co_presupuestal
 * @property string $id_creacion
 * @property timestamp $fe_modificacion
 * @property string $id_modificacion
 * @property string $es_estado
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BasePytmExperimento extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('pytm_experimento');
        $this->hasColumn('co_experimento', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             'fixed' => true,
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_componente', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('fe_ini_experimento', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('fe_fin_experimento', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_localidad_experimento', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_palabras_claves', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_resumen', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_introduccion', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_metodo_usuado', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_resultado', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_conclusiones', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ap_paterno_propietario', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_meta_lograda', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ap_materno_propietario', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_nomnre__propietario', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_meta_programada', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ca_muestra_experimento', 'decimal', 18, array(
             'type' => 'decimal',
             'length' => 18,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_aspecto_especificio', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_problema_especifico', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_objetivo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ca_total_repeticiones', 'decimal', 18, array(
             'type' => 'decimal',
             'length' => 18,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('de_diseno_experimental', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ca_presupuesto_bienes', 'float', 19, array(
             'type' => 'float',
             'length' => 19,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.0000',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ca_presupuesto_servicio', 'float', 19, array(
             'type' => 'float',
             'length' => 19,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.0000',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ca_presupuesto_otros', 'float', 19, array(
             'type' => 'float',
             'length' => 19,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.0000',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ca_presupuesto__total_exp', 'float', 19, array(
             'type' => 'float',
             'length' => 19,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0.0000',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('pc_subproyecto', 'decimal', 18, array(
             'type' => 'decimal',
             'length' => 18,
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('fe_creacion', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('co_presupuestal', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_creacion', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('fe_modificacion', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_modificacion', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('es_estado', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

}